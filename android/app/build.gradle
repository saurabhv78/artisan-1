buildscript {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        println "[BUILD] 🔹 Adding Gradle dependencies..."
        classpath 'com.google.gms:google-services:4.4.2'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.9.9'
    }
}

plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file("key.properties")
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    println "[ANDROID] ✅ Configuring Android settings..."
    namespace = "com.artisans.artisans"
    compileSdk 36
    ndkVersion = "28.2.13676358"

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.artisans.artisans"
        minSdkVersion 24
        targetSdk 36
        versionCode = flutter.versionCode
        versionName = flutter.versionName
        multiDexEnabled true
        println "[CONFIG] 📌 Default config set: minSdk=${minSdk}, targetSdk=${targetSdk}, versionCode=${versionCode}, versionName=${versionName}"
    }
    
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            println "[BUILD] ⚙️ Debug build type configured."
        }
        release {
            println "[SIGNING] 🔑 Setting up release signing config..."
            signingConfig = signingConfigs.release
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    def appName = "Artisan"
                    def date = new Date().format("dd-MM-yy_HH-mm")
                    def apkDesc = project.hasProperty('apkDesc') ? project.apkDesc : ''
                    def versionName = variant.versionName 
                    def versionCode = variant.versionCode 
                    def apkName = "${appName}_${versionName}+${versionCode}_${apkDesc}_${date}_${variant.name}.apk"
                    output.outputFileName = apkName
            }
            }
            println "[BUILD] 🚀 Release build type configured."
        }
    }
}

flutter {
    source = "../.."
}

dependencies {
    println "[DEPENDENCIES] 📥 Adding Firebase dependencies..."
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.4'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation(platform("com.google.firebase:firebase-bom:33.7.0"))
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.facebook.android:facebook-login:latest.release'
    implementation 'com.google.firebase:firebase-analytics'
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
println "[BUILD] 🎯 Build script execution completed."
